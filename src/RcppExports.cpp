// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sc_2015LB_commute
arma::mat sc_2015LB_commute(arma::mat& D, int K);
RcppExport SEXP _T4cluster_sc_2015LB_commute(SEXP DSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(sc_2015LB_commute(D, K));
    return rcpp_result_gen;
END_RCPP
}
// cpp_scNJW
Rcpp::List cpp_scNJW(arma::mat& D, int K, double sigma, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_cpp_scNJW(SEXP DSEXP, SEXP KSEXP, SEXP sigmaSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_scNJW(D, K, sigma, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// cpp_scSM
Rcpp::List cpp_scSM(arma::mat& D, int K, double sigma, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_cpp_scSM(SEXP DSEXP, SEXP KSEXP, SEXP sigmaSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_scSM(D, K, sigma, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// cpp_scUL
Rcpp::List cpp_scUL(arma::mat& D, int K, double sigma, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_cpp_scUL(SEXP DSEXP, SEXP KSEXP, SEXP sigmaSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_scUL(D, K, sigma, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// cpp_sc05Z
Rcpp::List cpp_sc05Z(arma::mat& D, int K, int nnbd, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_cpp_sc05Z(SEXP DSEXP, SEXP KSEXP, SEXP nnbdSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type nnbd(nnbdSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_sc05Z(D, K, nnbd, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// cpp_sc09G
Rcpp::List cpp_sc09G(arma::mat& D, int K, int nnbd, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_cpp_sc09G(SEXP DSEXP, SEXP KSEXP, SEXP nnbdSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type nnbd(nnbdSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_sc09G(D, K, nnbd, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// cpp_sc10Z
Rcpp::List cpp_sc10Z(arma::mat& D, int K, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_cpp_sc10Z(SEXP DSEXP, SEXP KSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_sc10Z(D, K, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// cpp_sc11Y
Rcpp::List cpp_sc11Y(arma::umat& idmat, arma::mat& distmat, int K, bool usekmeans, int maxiter, double rho);
RcppExport SEXP _T4cluster_cpp_sc11Y(SEXP idmatSEXP, SEXP distmatSEXP, SEXP KSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat& >::type idmat(idmatSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type distmat(distmatSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_sc11Y(idmat, distmat, K, usekmeans, maxiter, rho));
    return rcpp_result_gen;
END_RCPP
}
// cpp_sc12L
Rcpp::List cpp_sc12L(arma::mat& D, int K, bool usekmeans, int maxiter, double sigma);
RcppExport SEXP _T4cluster_cpp_sc12L(SEXP DSEXP, SEXP KSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_sc12L(D, K, usekmeans, maxiter, sigma));
    return rcpp_result_gen;
END_RCPP
}
// src_pcm
arma::mat src_pcm(arma::imat& clmat);
RcppExport SEXP _T4cluster_src_pcm(SEXP clmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::imat& >::type clmat(clmatSEXP);
    rcpp_result_gen = Rcpp::wrap(src_pcm(clmat));
    return rcpp_result_gen;
END_RCPP
}
// src_psm
arma::mat src_psm(arma::imat& clmat);
RcppExport SEXP _T4cluster_src_psm(SEXP clmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::imat& >::type clmat(clmatSEXP);
    rcpp_result_gen = Rcpp::wrap(src_psm(clmat));
    return rcpp_result_gen;
END_RCPP
}
// arma_kmeans_random
Rcpp::List arma_kmeans_random(arma::mat& X, int k, int maxiter);
RcppExport SEXP _T4cluster_arma_kmeans_random(SEXP XSEXP, SEXP kSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_kmeans_random(X, k, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// arma_kmeans_kmeanspp
Rcpp::List arma_kmeans_kmeanspp(arma::mat& X, arma::mat& init, int k, int maxiter);
RcppExport SEXP _T4cluster_arma_kmeans_kmeanspp(SEXP XSEXP, SEXP initSEXP, SEXP kSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type init(initSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_kmeans_kmeanspp(X, init, k, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// cpp_shortestpath
arma::mat cpp_shortestpath(arma::umat locs, arma::mat dists);
RcppExport SEXP _T4cluster_cpp_shortestpath(SEXP locsSEXP, SEXP distsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type dists(distsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_shortestpath(locs, dists));
    return rcpp_result_gen;
END_RCPP
}
// cpp_pdist
arma::mat cpp_pdist(arma::mat X, int p);
RcppExport SEXP _T4cluster_cpp_pdist(SEXP XSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_pdist(X, p));
    return rcpp_result_gen;
END_RCPP
}
// cpp_pdist2
arma::mat cpp_pdist2(arma::mat X, arma::mat Y, int p);
RcppExport SEXP _T4cluster_cpp_pdist2(SEXP XSEXP, SEXP YSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_pdist2(X, Y, p));
    return rcpp_result_gen;
END_RCPP
}
// cpp_pdistMP
arma::mat cpp_pdistMP(arma::mat X, int p, int nCores);
RcppExport SEXP _T4cluster_cpp_pdistMP(SEXP XSEXP, SEXP pSEXP, SEXP nCoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type nCores(nCoresSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_pdistMP(X, p, nCores));
    return rcpp_result_gen;
END_RCPP
}
// label_kmeans
arma::urowvec label_kmeans(arma::mat data, int K, int maxiter);
RcppExport SEXP _T4cluster_label_kmeans(SEXP dataSEXP, SEXP KSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(label_kmeans(data, K, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// label_gmm
arma::urowvec label_gmm(arma::mat data, int K, int maxiter);
RcppExport SEXP _T4cluster_label_gmm(SEXP dataSEXP, SEXP KSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(label_gmm(data, K, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// sc_unnormalized
Rcpp::List sc_unnormalized(arma::mat W, int K, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_sc_unnormalized(SEXP WSEXP, SEXP KSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(sc_unnormalized(W, K, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// sc_normalNJW
Rcpp::List sc_normalNJW(arma::mat W, int K, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_sc_normalNJW(SEXP WSEXP, SEXP KSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(sc_normalNJW(W, K, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// sc_normalSM
Rcpp::List sc_normalSM(arma::mat W, int K, bool usekmeans, int maxiter);
RcppExport SEXP _T4cluster_sc_normalSM(SEXP WSEXP, SEXP KSEXP, SEXP usekmeansSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type usekmeans(usekmeansSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(sc_normalSM(W, K, usekmeans, maxiter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_T4cluster_sc_2015LB_commute", (DL_FUNC) &_T4cluster_sc_2015LB_commute, 2},
    {"_T4cluster_cpp_scNJW", (DL_FUNC) &_T4cluster_cpp_scNJW, 5},
    {"_T4cluster_cpp_scSM", (DL_FUNC) &_T4cluster_cpp_scSM, 5},
    {"_T4cluster_cpp_scUL", (DL_FUNC) &_T4cluster_cpp_scUL, 5},
    {"_T4cluster_cpp_sc05Z", (DL_FUNC) &_T4cluster_cpp_sc05Z, 5},
    {"_T4cluster_cpp_sc09G", (DL_FUNC) &_T4cluster_cpp_sc09G, 5},
    {"_T4cluster_cpp_sc10Z", (DL_FUNC) &_T4cluster_cpp_sc10Z, 4},
    {"_T4cluster_cpp_sc11Y", (DL_FUNC) &_T4cluster_cpp_sc11Y, 6},
    {"_T4cluster_cpp_sc12L", (DL_FUNC) &_T4cluster_cpp_sc12L, 5},
    {"_T4cluster_src_pcm", (DL_FUNC) &_T4cluster_src_pcm, 1},
    {"_T4cluster_src_psm", (DL_FUNC) &_T4cluster_src_psm, 1},
    {"_T4cluster_arma_kmeans_random", (DL_FUNC) &_T4cluster_arma_kmeans_random, 3},
    {"_T4cluster_arma_kmeans_kmeanspp", (DL_FUNC) &_T4cluster_arma_kmeans_kmeanspp, 4},
    {"_T4cluster_cpp_shortestpath", (DL_FUNC) &_T4cluster_cpp_shortestpath, 2},
    {"_T4cluster_cpp_pdist", (DL_FUNC) &_T4cluster_cpp_pdist, 2},
    {"_T4cluster_cpp_pdist2", (DL_FUNC) &_T4cluster_cpp_pdist2, 3},
    {"_T4cluster_cpp_pdistMP", (DL_FUNC) &_T4cluster_cpp_pdistMP, 3},
    {"_T4cluster_label_kmeans", (DL_FUNC) &_T4cluster_label_kmeans, 3},
    {"_T4cluster_label_gmm", (DL_FUNC) &_T4cluster_label_gmm, 3},
    {"_T4cluster_sc_unnormalized", (DL_FUNC) &_T4cluster_sc_unnormalized, 4},
    {"_T4cluster_sc_normalNJW", (DL_FUNC) &_T4cluster_sc_normalNJW, 4},
    {"_T4cluster_sc_normalSM", (DL_FUNC) &_T4cluster_sc_normalSM, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_T4cluster(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
